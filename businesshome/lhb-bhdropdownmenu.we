<template>
    <div class="select-container" >
        <div class="content">
            <content></content>
        </div>
        <div class="mask" id="mask" onclick="switchView" style="visibility:{{visibility}};"></div>
        <div class="options" id="options" style="top:{{tops}};">
            <div repeat="{{status}}" class="cell" vid="{{id}}" onclick="onItemClick" track-by="{{$index}}">
                <text class="name {{id==statusId?'current': ''}}">{{name}}</text>
                <image class="icon-curr-flag" src="{{flagSrc}}" if="{{id==statusId}}"></image>
            </div>
        </div>
        <div class="select">
           <div class="oneselect" onclick="clicktab1" style="background-color:{{backcolor1}};">
                <text class="current-text" style="color:{{color1}};">{{statusName1}}</text>
                <image class="icon-arrow" id="arrow1" src="{{arrowSrc}}"></image>
           </div>
           <div class="oneselect" onclick="clicktab2" style="background-color:{{backcolor2}};">
                <text class="current-text"  style="color:{{color2}};">{{statusName2}}</text>
                <image class="icon-arrow" id="arrow2" src="{{arrowSrc}}"></image>
           </div> 
           <div class="oneselect" onclick="clicktab3" style="background-color:{{backcolor3}};">
                <text class="current-text" style="color:{{color3}};">{{statusName3}}</text>
                <image class="icon-arrow" id="arrow3" src="{{arrowSrc}}"></image>
           </div>
           <!-- <text>{{test}}</text>  --> 
        </div>
    </div>
    <!-- weex not support  z-index -->
</template>

<style>
    /* item height: 90 ; */
    .select-container{
        flex-direction: column;
        position: relative;
        z-index: 1000;
    }

    .content{
        width: 750;
        margin-top: 90;
    }

    .mask{
        position: absolute;
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;
        flex: 1;
        width: 750;
        background-color: rgba(0,0,0,0.5);
    }

    .select {
        width: 750;
        height: 90;
        flex-direction: row;
        align-items: center;
        justify-content: space-between;
        border-bottom-width: 1;
        border-top-width: 1;
        border-style: solid;
        border-color: rgb(237,237,237);
        background-color: white;
        z-index: 1001;
        position: absolute;
        top: 0;
    }
    .oneselect{
        flex:1;
        flex-direction:row;
        align-items: center;
        justify-content: center;
        text-align:center;
        padding-left:30;
        padding-right:30;
        border-right-width: 1;
        border-bottom-width: 1;
        border-color: rgb(237,237,237);
        height: 90;
        /*padding-left:30;
        padding-right:30;*/
    }

    .current-text {
        
        font-size: 33;
        /*flex: 1;*/
    }

    .icon-arrow {
        width: 21;
        height: 17;
        margin-left: 16;
    }



    .options {
        position: absolute;
        width: 750;
        background-color: #eee;
        transform-origin: center center;

    }
    .cell {
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        width: 750;
        height: 90;
        padding-left:30;
        padding-right:30;

        border-bottom-width: 1;
        border-style: solid;
        border-color: #ddd;
    }

    .name {
        color: #333;
        font-size: 33;
        flex: 1;
    }

    .icon-curr-flag{
        width: 32;
        height: 32;
    }

    .current {
        color:rgb(248,207,52);
    }
</style>


<script>
    var animation = require('@weex-module/animation');

    module.exports = {
        data: {
            test:'gqgrqqqg',
            color1:'#333',
            color2:'#333',
            color3:'#333',
            backcolor1:'white',
            backcolor2:'white',
            backcolor3:'white',
            visibility:'hidden',
            tops:'-361',
            currentid:'',
            current_showMask:'',
            current_translate:'',
            current_opacity:'',
            statusId:'0',
            statusIda: '0',
            statusIdb: '0',
            statusIdc: '0', 
            status: [
                
            ],
            status1:[
                {id: '0', name: '全部'},
                {id: '1', name: '待审核'},
                {id: '2', name: '进行中'},
                {id: '3', name: '已完成'},
                {id: '4', name: '已结束'}
            ],
            status2:[
                {id: '0', name: '全部'},
                {id: '1', name: '本月'},
                {id: '2', name: '近三个月'},
                {id: '3', name: '近半年'},
                {id: '4', name: '近一年'}
            ],
            status3:[
                {id: '0', name: '全部'},
                {id: '1', name: '我的'},
                {id: '2', name: '其他'}
            ],
            flagSrc: 'https://gw.alicdn.com/tps/TB11a2lKFXXXXbVXpXXXXXXXXXX-32-32.png',
            arrowSrc: 'http://mingstatic.oss-cn-hangzhou.aliyuncs.com/weex/ios/Image/buiness_arrow.png'
        },
        computed: {
            statusName1: {
                get: function(){
                    var id = this.statusIda;
                    if (id==0) {
                        return "状态";
                    }else{
                        return this.status1.filter(function(s){
                        return s.id == id
                      })[0].name;
                    }
                    
                }
            },
            statusName2: {
                get: function(){
                    var id = this.statusIdb;
                    if (id==0) {
                        return "月份";
                    }else{
                        return this.status2.filter(function(s){
                            return s.id == id
                        })[0].name;
                    }
                }
            },
            statusName3: {
                get: function(){
                    var id = this.statusIdc;
                    if (id==0) {
                        return "责任人";
                    }else{
                        return this.status3.filter(function(s){
                        return s.id == id
                      })[0].name;
                    }
                    
                }
            }
        },
        methods: {
            clicktab1:function() {
                
                if (this.currentid!=1) {
                    this.current_translate=null;
                    this.current_opacity=null;
                    this.current_showMask=null;
                }
                
                this.test='111';
                this.tops='-361';
                this.status=this.status1;
                this.statusId=this.statusIda;
                this.currentid=1;             
                this.collapse(this._ids.options.el.ref);
                this.rotate(this._ids.arrow1.el.ref);
                this.toggleMaskVisible();
                //this.visibility='visible';
                this.opacity(this._ids.mask.el.ref);

                this.$dispatch('statuschangevisible', {
                    isvisibility:this.visibility
                })
            },
            clicktab2:function(argument) {
                if (this.currentid!=2) {
                    this.current_translate=null;
                    this.current_opacity=null;
                    this.current_showMask=null;
                }
                
                this.test='222';
                this.tops='-361';
                this.status=this.status2;
                this.statusId=this.statusIdb;  
                this.currentid=2;             
                this.collapse(this._ids.options.el.ref); 
                this.rotate(this._ids.arrow2.el.ref);
                this.toggleMaskVisible();
                //this.visibility='visible';
                this.opacity(this._ids.mask.el.ref);

                this.$dispatch('statuschangevisible', {
                    isvisibility:this.visibility
                })
            },
            clicktab3:function(argument) {
                if (this.currentid!=3) {
                    this.current_translate=null;
                    this.current_opacity=null;
                    this.current_showMask=null;
                }
                
                this.test='333';
                this.tops='-181';
                this.status=this.status3; 
                this.statusId=this.statusIdc; 
                this.currentid=3;             
                this.collapse(this._ids.options.el.ref); 
                this.rotate(this._ids.arrow3.el.ref);
                this.toggleMaskVisible();
                //this.visibility='visible';
                this.opacity(this._ids.mask.el.ref);

                this.$dispatch('statuschangevisible', {
                    isvisibility:this.visibility
                })
            },

            switchView: function(curid) { 
                this.toggleMaskVisible();

                this.opacity(this._ids.mask.el.ref);
                this.collapse(this._ids.options.el.ref);

                if (curid==1) {
                    this.rotate(this._ids.arrow1.el.ref);
                }else if (curid==2) {
                    this.rotate(this._ids.arrow2.el.ref);
                }else{
                    this.rotate(this._ids.arrow3.el.ref);
                };
                
                this.$dispatch('statuschangevisible', {
                    isvisibility:this.visibility
                })
            },

            onItemClick: function(e) {
                var vid = e.target.attr.vid;
                switch(this.currentid){
                    case 1:
                       this.statusIda = vid;
                       break;
                    case 2:
                       this.statusIdb = vid;
                       break;
                    case 3:
                       this.statusIdc = vid;
                       break; 
                    default:
                       break;        
                }
                // this.updateStatus(vid);
                this.switchView(this.currentid);
                this.$dispatch('statuschange', {
                    id1: this.statusIda,
                    name1: this.statusName1,
                    id2: this.statusIdb,
                    name2: this.statusName2,
                    id3: this.statusIdc,
                    name3: this.statusName3,
                    isvisibility:this.visibility
                })
            },

            updateStatus: function(id) { 
                this.statusId = id; 
            },

            toggleMaskVisible: function(){
                this.current_showMask = !this.current_showMask;
                var visibility = this.current_showMask? 'visible': 'hidden';
                this.visibility=visibility;
                //this._ids.mask.el.setClassStyle({visibility:visibility});

                if (this.visibility=='hidden') {
                    this.status=[];
                    this.color1="#333";
                    this.color2="#333";
                    this.color3="#333";
                    this.backcolor1='white';
                    this.backcolor2='white';
                    this.backcolor3='white';
                }else{
                    if (this.currentid==1) {
                        this.color1="rgb(248,207,52)";
                        this.color2="#333";
                        this.color3="#333";
                        this.backcolor1='#eee';
                        this.backcolor2='white';
                        this.backcolor3='white';
                    }else if (this.currentid==2) {
                        this.color2="rgb(248,207,52)";
                        this.color1="#333";
                        this.color3="#333";
                        this.backcolor2='#eee';
                        this.backcolor1='white';
                        this.backcolor3='white';
                    }else{
                        this.color3="rgb(248,207,52)";
                        this.color1="#333";
                        this.color2="#333";
                        this.backcolor3='#eee';
                        this.backcolor1='white';
                        this.backcolor2='white';
                    }
                };
            },

            collapse: function(ref, callback) {
                var platform = this.$getConfig().env.platform;
                var translate = 'translate(0, 100%)'; // Web need % ;
                if(platform == 'iOS') {
                    
                    if (this.currentid==3) {
                        translate = 'translate(0,270)';
                    }else{
                        translate = 'translate(0,450)'; // ios bug && fixing
                    }
                }
                this.current_translate = this.current_translate ? '' : translate;
                this.anim(ref, {
                  transform: this.current_translate
                }, 'ease', 100, callback);
            },

            opacity: function(ref, callback) {
                var self = this;
                self.current_opacity = self.current_opacity === 1 ? 0.1 : 1;
                self.anim(ref, {
                    opacity: self.current_opacity
                }, 'ease', 100, callback);
            },

            rotate: function(ref, callback) {
                var self = this;
                if(!self.current_rotate) {
                    self.current_rotate = 0;
                }
                self.current_rotate = self.current_rotate + 180;
                self.anim(ref, {
                    transform: 'rotate(' + self.current_rotate + 'deg)'
                }, 'linear', 100, callback);
            },

            anim: function(ref, styles, timingFunction, duration, callback) {
                animation.transition(ref, {
                  styles: styles,
                  timingFunction: timingFunction,
                  duration: duration
                }, callback || function(){});
            }
        }
    }
</script>
